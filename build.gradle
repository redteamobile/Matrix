ext {
    projectName = "matrix"
    projectVerion = "0.0.1-SNAPSHOT"
    dockerPush = false
}

buildscript {
    ext {
        springBootVersion = "1.4.1.RELEASE"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:1.2")
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.1'
    }
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "spring-boot"
apply plugin: "docker"
apply plugin: 'com.google.protobuf'

jar {
    baseName = projectName
    version = projectVerion
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "http://repo.redtea.io:8081/nexus/content/groups/public/"
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/protoGen'
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.5.0"
        }
    }

    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins {
                java{
                    outputSubDir = 'protoGen'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'protoGen'
                }
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/"
}

task cleanProtoGen{
    doFirst{
        delete("$projectDir/src/main/protoGen")
    }
}
clean.dependsOn cleanProtoGen

dependencies {
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-jdbc") {
        exclude group: "org.apache.tomcat", module: "tomcat-jdbc"
    }
    compile("com.redteamobile:mis:0.0.22")
    compile("com.zaxxer:HikariCP") {
        exclude group: "com.sun", module: "tools"
    }
    compile("com.fasterxml.jackson.core:jackson-databind")
    compile("io.springfox:springfox-swagger2:2.5.0") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    compile("io.springfox:springfox-swagger-ui:2.5.0") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    compile("org.liquibase:liquibase-core")
    runtime("mysql:mysql-connector-java")
    compile("com.h2database:h2:1.4.192")
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    testCompile("org.springframework.boot:spring-boot-starter-test")

    compile('org.lognet:grpc-spring-boot-starter:2.0.5')
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.4.0'
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.4.0'

}

bootRun {
    addResources = true
}

/** docker integration */
group = "redteamobile"

docker {
    baseImage "openjdk:8-jre-alpine"
}

task buildDocker(type: Docker, dependsOn: build) {
    push = dockerPush
    applicationName = jar.baseName
    tagVersion = jar.version
    addFile(jar.archivePath, '/app.jar')
    entryPoint(['sh', '-c', 'java -Dserver.port=8080 \
-Dspring.profiles.active=docker -Dspring.main.banner-mode=off \
-Djava.security.egd=file:/dev/./urandom ${HEAP_OPTS} -jar /app.jar'])
}
/* docker integration **/

task gz(type: Tar, dependsOn: assemble) {
    archiveName = jar.baseName + '-' + jar.version + '.tar.gz'
    destinationDir = file('build/target')
    from('build/libs') {
        exclude '*.original'
        into 'libs'
    }
    from('bin') {
        into 'bin'
    }
    from('config') {
        into 'config'
    }
}
